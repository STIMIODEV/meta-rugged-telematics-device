diff -Naur A/drivers/net/can/m_can/m_can.c B/drivers/net/can/m_can/m_can.c
--- A/drivers/net/can/m_can/m_can.c	2022-11-17 14:06:00.903051394 +0530
+++ B/drivers/net/can/m_can/m_can.c	2022-11-17 13:50:01.820157956 +0530
@@ -810,6 +810,14 @@
 	return work_done;
 }
 
+static int m_can_rx_handler_rx(struct net_device *dev, int quota)
+{
+	int work_done = 0;
+	work_done += m_can_do_rx_poll(dev, (quota - work_done));
+
+	return work_done;	
+}
+
 static int m_can_rx_handler(struct net_device *dev, int quota)
 {
 	struct m_can_classdev *cdev = netdev_priv(dev);
@@ -867,6 +875,16 @@
 	return work_done;
 }
 
+static int m_can_rx_peripheral_rx(struct net_device *dev)
+{
+	struct m_can_classdev *cdev = netdev_priv(dev);
+
+	m_can_rx_handler_rx(dev, 1);
+	m_can_enable_all_interrupts(cdev);
+
+	return 0;
+}
+
 static int m_can_rx_peripheral(struct net_device *dev)
 {
 	struct m_can_classdev *cdev = netdev_priv(dev);
@@ -949,12 +967,7 @@
 	u32 ir;
 
 	ir = m_can_read(cdev, M_CAN_IR);
-	if(iw_mcan_prop)
-	{
-		if (ir != 0x1800 && ir != 0x1801 && ir != 0x0)
-			ir = 3;
-	}
-	else
+	if(!iw_mcan_prop)
 	{
 		if (!ir)
 			return IRQ_NONE;
@@ -964,20 +977,7 @@
 	if (ir & IR_ALL_INT)
 		m_can_write(cdev, M_CAN_IR, ir);
 
-	if (cdev->ops->clear_interrupts)
-	{
-		if(iw_mcan_prop)
-		{
-			if(ir == 3 || ir == 0)
-				cdev->ops->clear_interrupts(cdev);
-			else
-				cdev->ops->clear_interrupts_tx(cdev);
-		}
-		else
-		{
-			cdev->ops->clear_interrupts(cdev);
-		}
-	}
+	cdev->ops->clear_interrupts(cdev);
 
 	/* schedule NAPI in case of
 	 * - rx IRQ
@@ -986,6 +986,13 @@
 	 */
 	if(iw_mcan_prop)
 	{
+		if(ir == 0x0 || ir == 0x1) /* Watchdog interrupt */
+		{
+			m_can_disable_all_interrupts(cdev);
+			m_can_rx_peripheral_rx(dev);
+			return IRQ_HANDLED;
+		}
+
 		if ((ir & IR_RF0W) || (ir & IR_ERR_ALL_30X)) {
 			cdev->irqstatus = ir;
 			m_can_disable_all_interrupts(cdev);
@@ -1208,7 +1215,6 @@
 				(cdev->mcfg[MRAM_RXF0].num << RXFC_FS_SHIFT) |
 				cdev->mcfg[MRAM_RXF0].off | 0x99000000);
 
-		cdev->mcfg[MRAM_RXF0].num << RXFC_FS_SHIFT | cdev->mcfg[MRAM_RXF0].off;
 		m_can_write(cdev, M_CAN_RXF1C,
 				(cdev->mcfg[MRAM_RXF1].num << RXFC_FS_SHIFT) |
 				cdev->mcfg[MRAM_RXF1].off | 0x99000000);
@@ -1658,7 +1664,11 @@
 
 	if (cdev->is_peripheral) {
 		if (cdev->tx_skb) {
-			netdev_err(dev, "hard_xmit called while tx busy\n");
+			if(!iw_mcan_prop)
+			{
+				netdev_err(dev, "hard_xmit called while tx busy\n");
+			}
+
 			return NETDEV_TX_BUSY;
 		}
 
diff -Naur A/drivers/net/can/m_can/tcan4x5x.c B/drivers/net/can/m_can/tcan4x5x.c
--- A/drivers/net/can/m_can/tcan4x5x.c	2022-11-17 14:06:00.903051394 +0530
+++ B/drivers/net/can/m_can/tcan4x5x.c	2022-11-17 13:50:01.820157956 +0530
@@ -367,33 +367,6 @@
 	return ret;
 }
 
-static int tcan4x5x_clear_interrupts_tx(struct m_can_classdev *cdev)
-{
-	int ret;
-	struct tcan4x5x_priv *tcan4x5x = cdev->device_data;
-	ret = tcan4x5x_write_tcan_reg(cdev, TCAN4X5X_STATUS,
-			TCAN4X5X_CLEAR_ALL_INT);
-	if (ret)
-		return ret;
-
-	ret = tcan4x5x_write_tcan_reg(cdev, TCAN4X5X_MCAN_INT_REG,
-			TCAN4X5X_ENABLE_MCAN_INT);
-	if (ret)
-		return ret;
-
-	ret = tcan4x5x_write_tcan_reg(cdev, TCAN4X5X_INT_FLAGS,
-			TCAN4X5X_CLEAR_ALL_INT);
-	if (ret)
-		return ret;
-
-	ret = tcan4x5x_write_tcan_reg(cdev, TCAN4X5X_ERROR_STATUS,
-			TCAN4X5X_CLEAR_ALL_INT);
-	if (ret)
-		return ret;
-
-	return ret;
-}
-
 static int tcan4x5x_init(struct m_can_classdev *cdev)
 {
 	struct tcan4x5x_priv *tcan4x5x = cdev->device_data;
@@ -494,9 +467,6 @@
 	.write_fifo = tcan4x5x_write_fifo,
 	.read_fifo = tcan4x5x_read_fifo,
 	.clear_interrupts = tcan4x5x_clear_interrupts,
-#ifdef CONFIG_MX6ULL_IWG26I
-	.clear_interrupts_tx = tcan4x5x_clear_interrupts_tx,
-#endif /* CONFIG_MX6ULL_IWG26I */
 };
 
 /*
