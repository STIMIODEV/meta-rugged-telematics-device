bootcmd=run mmcboot
bootdelay=3
baudrate=115200
ethprime=FEC1
loadaddr=0x80800000
mfgtool_args=setenv bootargs console=${console},${baudrate} rdinit=/linuxrc g_mass_storage.stall=0 g_mass_storage.removable=1 g_mass_storage.file=/fat g_mass_storage.ro=1 g_mass_storage.idVendor=0x066F g_mass_storage.idProduct=0x37FF g_mass_storage.iSerialNumber="" clk_ignore_unused 
initrd_addr=0x83800000
initrd_high=0xffffffff
bootcmd_mfg=run mfgtool_args;bootz ${loadaddr} ${initrd_addr} ${fdt_addr}
script=boot.scr
image=zImage
console=ttymxc4
fdt_high=0xffffffff
initrd_high=0xffffffff
ethaddr=00:01:02:03:04:05
fdt_file=imx6ull-iwg26i.dtb
fdt_addr=0x83000000
boot_fdt=try
ip_dyn=yes
mmcdev=1
mmcpart=1
mmcautodetect=yes
loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} /boot/${script}
bootscript=echo Running bootscript from mmc ...; source
loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
mmcboot=echo Booting from mmc ...; test -n ${BOOT_ORDER} || setenv BOOT_ORDER A B ;test -n ${BOOT_A_LEFT} || setenv BOOT_A_LEFT 3 ;test -n ${BOOT_B_LEFT} || setenv BOOT_B_LEFT 3 ;setenv default_bootargs console=${console},${baudrate};setenv bootargs ;for BOOT_SLOT in ${BOOT_ORDER}; do if test x${bootargs} != x; then echo all slot attempts executed ;elif test x${BOOT_SLOT} = xA ; then if test 0x${BOOT_A_LEFT} -gt 0; then echo Found valid slot A, ${BOOT_A_LEFT} attempts remaining;setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1;setenv loadimage ext4load mmc 1:1 ${loadaddr} /boot/${image};setenv loadfdt ext4load mmc 1:1 ${fdt_addr} /boot/${fdt_file};setenv bootargs ${default_bootargs} root=/dev/mmcblk1p1 rootwait rw rauc.slot=A;fi;elif test x${BOOT_SLOT} = xB; then if test 0x${BOOT_B_LEFT} -gt 0; then echo Found valid slot B, ${BOOT_B_LEFT} attempts remaining;setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1;setenv loadimage ext4load mmc 1:2 ${loadaddr} /boot/${image};setenv loadfdt ext4load mmc 1:2 ${fdt_addr} /boot/${fdt_file};setenv bootargs ${default_bootargs} root=/dev/mmcblk1p2 rootwait rw rauc.slot=B;fi;else echo no valid slot found; fi;done;if test -n ${bootargs}; then saveenv;else echo No valid slot found, resetting tries to 3;setenv BOOT_A_LEFT 3;setenv BOOT_B_LEFT 3;saveenv;reset;fi;echo Loading dtb;${loadfdt};echo Loading kernel;${loadimage};echo Starting kernel;bootz ${loadaddr} - ${fdt_addr};
netargs=setenv bootargs console=${console},${baudrate} root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp
netboot=echo Booting from net ...; run netargs; if test ${ip_dyn} = yes; then setenv get_cmd dhcp; else setenv get_cmd tftp; fi; ${get_cmd} ${image}; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if ${get_cmd} ${fdt_addr} ${fdt_file}; then bootz ${loadaddr} - ${fdt_addr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;